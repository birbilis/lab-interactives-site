{
  "title": "Linking Thermal Energy, Kinetic Energy, and Temperature (complex)",
  "publicationStatus": "public",
  "subtitle": "",
  "aspectRatio": 1.1666666667,
  "fontScale": 1.0,
  "theme": [
    "hide-legends"
  ],
  "about": [
    "Explore the link between thermal energy, kinetic energy of atoms, and the measurement of temperature."
  ],
  "models": [
    {
      "type": "md2d",
      "id": "empty",
      "url": "models/lab-version/1/md2d/building-models/linking-thermal-ke-temp.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "controlButtonStyle": "text"
      },
      "onLoad": [
        "onClick('background', function(x, y, d, i) {",
        "  addAtom({x: x, y: y, element:2});",
        "  set( { avgKE: get('kineticEnergy')/getNumberOfAtoms() } );",
        "});",
        "onClick('atom', function(x, y, d, i) {",
        "  removeAtom(i);",
        "  set( { avgKE: get('kineticEnergy')/getNumberOfAtoms() } );",
        "});",
        "callEvery(200, function() {",
        "  set( { avgKE: get('kineticEnergy')/getNumberOfAtoms() } );",
        "});",
        "onStart(function() {",
        "  setComponentDisabled('add-energy', false);",
        "  setComponentDisabled('remove-energy',false);",
        "});",
        "onStop(function() {",
        "  setComponentDisabled('add-energy', true);",
        "  setComponentDisabled('remove-energy',true);",
        "});",
        "start();"
      ]
    }
  ],
  "filteredOutputs": [
  ],
  "parameters": [
    {
      "name": "dTemp",
      "initialValue": 100
    },
    {
      "name": "avgKE",
      "initialValue": 0
    }
  ],
  "components": [
    {
      "id": "add-energy",
      "type": "button",
      "action": [
        "var numAtoms, i, props, newVx, newVy, ratio, vXConstant, vYConstant;",
        "batch(function(){",
        "  numAtoms = getNumberOfAtoms()",
        "  for(i=0; i<numAtoms; i++){",
        "    // The idea here is to add the same amount of KE to every atom, and to keep",
        "    // the direction of the velocity the same",
        "    props = getAtomProperties(i);",
        "    ratio = props.vx*props.vx/(props.vy*props.vy);",
        "    vXConstant = 0.000000015*ratio/(1+ratio);",
        "    vYConstant = 0.000000015 - vXConstant;",
        "    if(props.vx >= 0) newVx =  Math.sqrt(vXConstant+props.vx*props.vx);",
        "    if(props.vx < 0) newVx = - Math.sqrt(vXConstant+props.vx*props.vx);",
        "    if(props.vy >= 0) newVy =  Math.sqrt(vYConstant+props.vy*props.vy);",
        "    if(props.vy < 0) newVy = - Math.sqrt(vYConstant+props.vy*props.vy);",
        "    setAtomProperties(i, {vx:newVx, vy:newVy});",
        "  }",
        "});",
        "console.log(get ('kineticEnergy'));",
        "console.log(getNumberOfAtoms());",
        "console.log(get('avgKE'));",
        "set( { avgKE: get('kineticEnergy')/getNumberOfAtoms() } );",
        "setComponentDisabled('remove-energy', false);",
        "if (get('avgKE')>0.09) {",
        "  setComponentDisabled('add-energy', true);",
        "}"
      ],
      "text": "+ Add thermal energy (heat)",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "remove-energy",
      "type": "button",
      "action": [
        "var numAtoms, i, props, vx2, vy2, newVx, newVy, ratio, vXConstant, vYConstant;",
        "batch(function(){",
        "  numAtoms = getNumberOfAtoms()",
        "  for(i=0; i<numAtoms; i++){",
        "    // The idea here is to subtract the same amount of KE from every atom, and to keep",
        "    // the direction of the velocity the same",
        "    props = getAtomProperties(i);",
        "    vx2 = props.vx * props.vx;",
        "    vy2 = props.vy * props.vy;",
        "    if (vx2*vy2) {",
        "      ratio = vx2/vy2;",
        "      vXConstant = 0.000000015*ratio/(1+ratio);",
        "      vYConstant = 0.000000015 - vXConstant;",
        "      if(props.vx >= 0) newVx =  Math.sqrt(Math.max(0, vx2-vXConstant));",
        "      if(props.vx < 0) newVx = - Math.sqrt(Math.max(0, vx2-vXConstant));",
        "      if(props.vy >= 0) newVy =  Math.sqrt(Math.max(0, vy2-vYConstant));",
        "      if(props.vy < 0) newVy = - Math.sqrt(Math.max(0, vy2-vYConstant));",
        "      setAtomProperties(i, {vx:newVx, vy:newVy});",
        "    }",
        "  }",
        "});",
        "set( { avgKE: get('kineticEnergy')/getNumberOfAtoms() } );",
        "setComponentDisabled('add-energy', false);",
        "if (get('avgKE')<0.007) {",
        "  setComponentDisabled('remove-energy', true);",
        "}"
      ],
      "text": "- Remove thermal energy (cool)",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "type": "barGraph",
      "id": "temp-graph",
      "min": 0,
      "max": 0.10,
      "title": "Temperature",
      "property": "avgKE",
      "units": false,
      "gridLines": 10,
      "labels": []
    },
    {
      "id": "atom-instructions",
      "type": "text",
      "text": [
        "Click on a particle to remove it, or click an empty space to add a particle",
        "",
        "with zero kinetic energy. _(Hint: This is easier if you stop the model first.)_"
      ]
    }
  ],
  "layout": {
    "right": [
      "temp-graph"
    ],
    "bottom": [
      ["add-energy","remove-energy"],
      ["atom-instructions"]
    ]
  }
}